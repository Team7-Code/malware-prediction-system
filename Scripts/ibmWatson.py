from watson_developer_cloud import SpeechToTextV1
from watson_developer_cloud.websocket import RecognizeCallback, AudioSource
from os.path import join, dirname
import json
import speech_recognition as sr

from watson_developer_cloud import LanguageTranslatorV3

speech_to_text = SpeechToTextV1(
    iam_apikey='3al608FpURr7LEu0HfT7ICKjDTVjkKVY1yQelGIxvqv6',
    url='https://stream.watsonplatform.net/speech-to-text/api'
)

class MyRecognizeCallback(RecognizeCallback):
    def __init__(self):
        RecognizeCallback.__init__(self)

    def on_data(self, data):
        return data

    def on_error(self, error):
        print('Error received: {}'.format(error))

    def on_inactivity_timeout(self, error):
        print('Inactivity timeout: {}'.format(error))

myRecognizeCallback = MyRecognizeCallback()

with open("C:\\Users\\srish\\Desktop\\Nittany AI\\audio-file.flac",
              'rb') as audio_file:
    audio_source = AudioSource(audio_file)
    res = speech_to_text.recognize_using_websocket(
        audio=audio_source,
        content_type='audio/flac',
        recognize_callback=myRecognizeCallback,
        model='en-US_BroadbandModel')




language_translator = LanguageTranslatorV3(
    version='2018-05-01',
    iam_apikey='R7TVP7JAYP24CZmLSZCPvFq4v2uAyt7kog4cO4FaW314',
    url='https://gateway.watsonplatform.net/language-translator/api')

language = language_translator.identify(
    'Language translator translates text from one language to another').get_result()
res = language["languages"][0]['language']

r = sr.Recognizer()
mic = sr.Microphone()

with mic as source:
    r.adjust_for_ambient_noise(source)
    print("Speak: ")
    audio = r.listen(source)

text = r.recognize_google(audio,language="jp")




language = language_translator.identify("je veux savoir sur l'entrepôt de données").get_result()

res = language["languages"][0]['language']
print(res)