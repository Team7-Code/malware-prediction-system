


def optimize(X_train):
    
    X_train.Census_OSBranch = X_train.Census_OSBranch.astype('category')
    X_train.Census_OSVersion = X_train.Census_OSVersion.astype('category')
    X_train.ProductName = X_train.ProductName.astype('category')
    X_train.EngineVersion = X_train.EngineVersion.astype('category')
    X_train.AppVersion = X_train.AppVersion.astype('category')
    X_train.AvSigVersion = X_train.AvSigVersion.astype('category')
    X_train.CountryIdentifier = X_train.CountryIdentifier.astype("uint16")
    X_train.LocaleEnglishNameIdentifier = X_train.LocaleEnglishNameIdentifier.astype('uint16')
    X_train.Platform = X_train.Platform.astype('category')
    X_train.Processor = X_train.Processor.astype('category')
    X_train.OsVer = X_train.OsVer.astype('category')
    X_train.OsBuild = X_train.OsBuild.astype('uint16')
    X_train.OsSuite = X_train.OsSuite.astype('uint16')
    X_train.OsPlatformSubRelease = X_train.OsPlatformSubRelease.astype('category')
    X_train.SkuEdition = X_train.SkuEdition.astype('category')
    X_train.Census_MDC2FormFactor = X_train.Census_MDC2FormFactor.astype('category')
    X_train.Census_DeviceFamily = X_train.Census_DeviceFamily.astype('category')
    X_train.Census_GenuineStateName = X_train.Census_GenuineStateName.astype('category')
    X_train.Census_ActivationChannel = X_train.Census_ActivationChannel.astype('category')
    X_train.Census_FlightRing = X_train.Census_FlightRing.astype('category')
    X_train.Census_OSEdition = X_train.Census_OSEdition.astype('category')
    X_train.Census_OSSkuName = X_train.Census_OSSkuName.astype('category')
    X_train.Census_OSInstallTypeName = X_train.Census_OSInstallTypeName.astype('category')
    X_train.Census_OSUILocaleIdentifier = X_train.Census_OSUILocaleIdentifier.astype('uint16')
    X_train.Census_OSWUAutoUpdateOptionsName = X_train.Census_OSWUAutoUpdateOptionsName.astype('category')
    X_train.Census_OSArchitecture = X_train.Census_OSArchitecture.astype('category')


    X_train.HasTpm = X_train.HasTpm.astype("bool_")
    X_train.IsBeta = X_train.IsBeta.astype("bool_")
    X_train.AutoSampleOptIn = X_train.AutoSampleOptIn.astype("bool_")
    X_train.IsSxsPassiveMode = X_train.IsSxsPassiveMode.astype("bool_")
    X_train.Census_HasOpticalDiskDrive = X_train.Census_HasOpticalDiskDrive.astype("bool_")
    X_train.Census_IsPortableOperatingSystem = X_train.Census_IsPortableOperatingSystem.astype("bool_")
    X_train.Census_IsSecureBootEnabled = X_train.Census_IsSecureBootEnabled.astype("bool_")
    X_train.Census_IsTouchEnabled = X_train.Census_IsTouchEnabled.astype("bool_")
    X_train.Census_IsPenCapable = X_train.Census_IsPenCapable.astype("bool_")


    X_train.Census_OSBuildNumber = X_train.Census_OSBuildNumber.astype('uint32')
    X_train.Census_OSBuildRevision = X_train.Census_OSBuildRevision.astype('uint32')


    X_train.Census_PrimaryDiskTypeName = X_train.Census_PrimaryDiskTypeName.fillna('UNKNOWN')  # MAjor
    X_train.Census_PrimaryDiskTypeName = X_train.Census_PrimaryDiskTypeName.str.replace("Unspecified", 'UNKNOWN')
    X_train.Census_PrimaryDiskTypeName = X_train.Census_PrimaryDiskTypeName.astype('category')

    X_train.Census_PowerPlatformRoleName = X_train.Census_PowerPlatformRoleName.fillna('UNKNOWN')
    X_train.Census_PowerPlatformRoleName = X_train.Census_PowerPlatformRoleName.str.replace("Unspecified", 'UNKNOWN')
    X_train.Census_PowerPlatformRoleName = X_train.Census_PowerPlatformRoleName.astype('category')

    X_train.OsBuildLab = X_train.OsBuildLab.fillna("UNKNOWN")
    X_train.OsBuildLab = X_train.OsBuildLab.astype('category')

    X_train.AVProductsEnabled = X_train.AVProductsEnabled.fillna(-1)  # Major
    X_train.AVProductsEnabled = X_train.AVProductsEnabled.astype('int8')

    X_train.PuaMode = X_train.PuaMode.fillna("on")  # Major
    X_train.PuaMode = X_train.PuaMode.astype('category')

    X_train.SMode = X_train.SMode.fillna(-1)
    X_train.SMode = X_train.SMode.astype('int8')

    X_train.Census_IsAlwaysOnAlwaysConnectedCapable = X_train.Census_IsAlwaysOnAlwaysConnectedCapable.fillna(-1)
    X_train.Census_IsAlwaysOnAlwaysConnectedCapable = X_train.Census_IsAlwaysOnAlwaysConnectedCapable.astype("int8")

    X_train.Census_IsVirtualDevice = X_train.Census_IsVirtualDevice.fillna(-1)
    X_train.Census_IsVirtualDevice = X_train.Census_IsVirtualDevice.astype("int8")

    X_train.Census_ThresholdOptIn = X_train.Census_ThresholdOptIn.fillna(-1)
    X_train.Census_ThresholdOptIn = X_train.Census_ThresholdOptIn.astype('int8')


    X_train.Census_IsFlightingInternal = X_train.Census_IsFlightingInternal.fillna(-1)
    X_train.Census_IsFlightingInternal = X_train.Census_IsFlightingInternal.astype('int8')

    X_train.Census_IsFlightsDisabled = X_train.Census_IsFlightsDisabled.fillna(-1)
    X_train.Census_IsFlightsDisabled = X_train.Census_IsFlightsDisabled.astype('int8')

    X_train.Census_IsWIMBootEnabled = X_train.Census_IsWIMBootEnabled.fillna(-1)
    X_train.Census_IsWIMBootEnabled = X_train.Census_IsWIMBootEnabled.astype('int8')

    X_train.Census_OEMModelIdentifier = X_train.Census_OEMModelIdentifier.fillna(-1)
    X_train.Census_OEMModelIdentifier = X_train.Census_OEMModelIdentifier.astype('int32')

    X_train.Census_OEMNameIdentifier = X_train.Census_OEMNameIdentifier.fillna(-1)
    X_train.Census_OEMNameIdentifier = X_train.Census_OEMNameIdentifier.astype('int16')

    X_train.AVProductStatesIdentifier = X_train.AVProductStatesIdentifier.fillna(-1)
    X_train.AVProductStatesIdentifier = X_train.AVProductStatesIdentifier.astype('int32')

    X_train.AVProductsInstalled = X_train.AVProductsInstalled.fillna(-1)
    X_train.AVProductsInstalled = X_train.AVProductsInstalled.astype('int8')

    X_train.Census_FirmwareManufacturerIdentifier = X_train.Census_FirmwareManufacturerIdentifier.fillna(-1)
    X_train.Census_FirmwareManufacturerIdentifier = X_train.Census_FirmwareManufacturerIdentifier.astype('int16')

    X_train.Census_OSInstallLanguageIdentifier = X_train.Census_OSInstallLanguageIdentifier.fillna(-1)

    X_train.UacLuaenable = X_train.UacLuaenable.fillna(-1)
    X_train.UacLuaenable = X_train.UacLuaenable.astype('int32')

    X_train.Firewall = X_train.Firewall.fillna(-1)
    X_train.Firewall = X_train.Firewall.astype('int8')

    X_train.Wdft_RegionIdentifier = X_train.Wdft_RegionIdentifier.fillna(-1)
    X_train.Wdft_RegionIdentifier = X_train.Wdft_RegionIdentifier.astype("int8")

    X_train.Wdft_IsGamer = X_train.Wdft_IsGamer.fillna(-1)
    X_train.Wdft_IsGamer = X_train.Wdft_IsGamer.astype("int8")

    X_train.RtpStateBitfield = X_train.RtpStateBitfield.fillna(-1)
    X_train.RtpStateBitfield = X_train.RtpStateBitfield.astype('int8')

    X_train.GeoNameIdentifier = X_train.GeoNameIdentifier.fillna(-1)
    X_train.GeoNameIdentifier = X_train.GeoNameIdentifier.astype('int16')

    X_train.IsProtected = X_train.IsProtected.fillna(-1)
    X_train.IsProtected = X_train.IsProtected.astype('int8')

    X_train.Census_ProcessorCoreCount = X_train.Census_ProcessorCoreCount.fillna(-1)
    X_train.Census_ProcessorCoreCount = X_train.Census_ProcessorCoreCount.astype('int16')

    X_train.OrganizationIdentifier = X_train.OrganizationIdentifier.fillna(-1)
    X_train.OrganizationIdentifier = X_train.OrganizationIdentifier.astype('int8')

    #
    # for col in X_train.select_dtypes('category').columns:
    #         X_train[col] = X_train[col]

    return X_train